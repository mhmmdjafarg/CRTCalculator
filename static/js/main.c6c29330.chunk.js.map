{"version":3,"sources":["components/Computation.js","components/Result.js","components/Header.js","bg.jpg","App.js","index.js"],"names":["findGCD","num1","num2","modInverse","a","m","m0","y","x","q","parseInt","t","solveCRT","array","i","length","j","modulo","checkPairwiseCoprime","forEach","element","Mdata","push","yData","remainder","remainders","map","modulos","MData","clearBtnOnClick","result","ReactDOM","render","document","getElementById","Header","classes","this","props","AppBar","position","Toolbar","Typography","variant","color","noWrap","className","grow","React","Component","withStyles","theme","flexGrow","useStyles","makeStyles","root","margin","spacing","width","button","App","useState","inputFields","setInputFields","handleSubmit","e","preventDefault","datas","isNaN","Button","type","onClick","questions","pairwiseValue","mValue","MValue","yValue","xValue","mString","xString","showResult","handleChangeInput","index","event","values","target","name","value","style","backgroundImage","background","backgroundPosition","backgroundAttachment","Container","Grid","container","alignItems","direction","justify","item","xs","autoComplete","onSubmit","inputField","TextField","label","required","onChange","IconButton","splice","handleRemoveFields","endIcon","id"],"mappings":"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","file":"static/js/main.c6c29330.chunk.js","sourcesContent":["export const findGCD = (num1, num2) => {\n  if (num2 === 0) {\n    return num1;\n  }\n  return findGCD(num2, num1 % num2);\n};\n\nexport function checkPairwiseCoprime(array) {\n  for (let i = 0; i < array.length - 1; i++) {\n    for (let j = i + 1; j < array.length; j++) {\n      if (findGCD(parseInt(array[i].modulo), parseInt(array[j].modulo)) !== 1) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n// contoh 77 . x =` 1 (mod 5), 77 =a, 5 = m\n// Mengembalikan balikan dari Mk(a) dalam moulus mk\nexport function modInverse(a, m) {\n  const m0 = m;\n  let y = 0;\n  let x = 1;\n\n  if (m === 1) return 0;\n\n  while (a > 1) {\n    // q is quotient\n    let q = parseInt(a / m);\n    let t = m;\n\n    // m is remainder now,\n    // process same as\n    // Euclid's algo\n    m = a % m;\n    a = t;\n    t = y;\n\n    // Update y and x\n    y = x - q * y;\n    x = t;\n  }\n  // agar x positif\n  if (x < 0) {\n    x += m0;\n  }\n  return x;\n};\n\n/**\n *\n * @param {*} array\n * Solve CRT:\n * Cek pairwise coprime\n * Cari m dari perkalian tiap modulo\n * Cari M1 - Mk simpan kedalam array\n * Cari y1 - yk simpan kedalam array\n * Hitung x = a1M1y1 + ... akMkyk\n * k = panjang array\n */\n\nexport const solveCRT = (array) => {\n  // Cek setiap pasangan modulo pairwise coprime\n  if (checkPairwiseCoprime(array)) {\n    const length = array.length;\n    let m = 1;\n    array.forEach((element) => {\n      m *= parseInt(element.modulo);\n    });\n\n    // Collect M value\n    let Mdata = [];\n    array.forEach((element) => {\n      Mdata.push(m / parseInt(element.modulo));\n    });\n\n    // Collect y value\n    let yData = [];\n    for (let i = 0; i < length; i++) {\n      yData.push(modInverse(Mdata[i], parseInt(array[i].modulo)));\n    };\n\n    // Get x value\n    let x = 0;\n    for (let j = 0; j < length; j++) {\n      x += parseInt(array[j].remainder) * Mdata[j] * yData[j];\n    };\n\n    // sederhanakan x menjadi terkecil\n    // x = x % m;\n\n    return {\n      remainders: array.map((element) => parseInt(element.remainder)),\n      modulos: array.map((element) => parseInt(element.modulo)),\n      m: m,\n      x: x,\n      MData: Mdata,\n      yData: yData,\n    };\n  } else {\n    return null;\n  }\n};","import ReactDOM from \"react-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nexport function showResult(datas, classes) {\n  let result;\n  if (datas == null || isNaN(datas.x)) {\n    result = (\n      <div className=\"result\">\n        <p>Cannot be solved</p>\n        <p></p>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          onClick={clearBtnOnClick}\n        >\n          Clear\n        </Button>\n      </div>\n    );\n  } else {\n    const questions = [];\n    const pairwiseValue = [];\n    const mValue = [];\n    const MValue = [];\n    const yValue = [];\n    const xValue = [];\n\n    // first step\n    questions.push(\n      <p>\n        <i>\n          Using Chinese Remainder Theorem solve the following system of modulo\n          equations:{\" \"}\n        </i>\n      </p>\n    );\n    for (let i = 0; i < datas.remainders.length; i++) {\n      questions.push(\n        <p>\n          x mod {datas.modulos[i]} = {datas.remainders[i]}\n        </p>\n      );\n    }\n\n    // second step, check pairwise coprime\n    pairwiseValue.push(\n      <p>First we check too see if each modulos is pairwise coprime</p>\n    );\n    for (let i = 0; i < datas.modulos.length - 1; i++) {\n      for (let j = i + 1; j < datas.modulos.length; j++) {\n        pairwiseValue.push(\n          <p>\n            Gcd({datas.modulos[i]},{datas.modulos[j]}) = 1\n          </p>\n        );\n      }\n    }\n    pairwiseValue.push(\n      <p>\n        Since all gcd calculation equal 1,then it is pairwise coprime, so we can\n        use the regular formula for the CRT\n      </p>\n    );\n\n    // find m\n    let mString = \"m = \";\n    for (let i = 0; i < datas.modulos.length; i++) {\n      mString += `${datas.modulos[i]} `;\n      if (i !== datas.modulos.length - 1) {\n        mString += \" . \";\n      }\n    }\n    mString += ` = ${datas.m}`;\n    mValue.push(<p>Find m value, {mString}</p>);\n\n    // find M1 .. Mk\n    for (let i = 0; i < datas.modulos.length; i++) {\n      MValue.push(\n        <p>\n          M<sub>{i + 1}</sub> = {datas.m} / {datas.modulos[i]} ={\" \"}\n          {datas.MData[i]}\n        </p>\n      );\n    }\n\n    // find Yi\n    yValue.push(\n      <p>\n        Find y<sub>k</sub> where y is inverse M<sub>k</sub> in modulus m\n        <sub>k</sub>\n      </p>\n    );\n    for (let i = 0; i < datas.modulos.length; i++) {\n      yValue.push(\n        <p>\n          Using our equation {i + 1} modulus of {datas.modulos[i]} and our\n          coefficient of {datas.MData[i]}. Calculate y<sub>{i + 1}</sub> in the\n          equation {datas.modulos[i]}x<sub>{i + 1}</sub> + {datas.MData[i]}y\n          <sub>{i + 1}</sub> = 1\n        </p>\n      );\n      yValue.push(\n        <p>\n          We get our y<sub>{i + 1}</sub> = {datas.yData[i]}\n        </p>\n      );\n    }\n\n    // find X\n    xValue.push(\n      <p>\n        Plug in all values to solve the equation X = a<sub>1</sub>M<sub>1</sub>y\n        <sub>1</sub> + a<sub>2</sub>M<sub>2</sub>y<sub>2</sub> + ... + a\n        <sub>k</sub>M<sub>k</sub>y<sub>k</sub>\n      </p>\n    );\n    let xString = \"X = \";\n    for (let j = 0; j < datas.modulos.length; j++) {\n      xString += `${datas.modulos[j]}.${datas.MData[j]}.${datas.yData[j]}`;\n      if (j !== datas.modulos.length - 1) {\n        xString += \" + \";\n      }\n    }\n    xString += ` = ${datas.x}`;\n    xValue.push(<p>{xString}</p>);\n    xValue.push(<p>mod X by {datas.m}</p>);\n\n    result = (\n      <div className=\"result\">\n        <div className=\"result-item\">{questions}</div>\n        <div className=\"result-item\">{pairwiseValue}</div>\n        <div className=\"result-item\">{mValue}</div>\n        <div className=\"result-item\">\n          <p>Find M value</p>\n          {MValue}\n        </div>\n        <div className=\"result-item\">{yValue}</div>\n        <div className=\"result-item\">{xValue}</div>\n        <div className=\"result-item final\">\n          <p>So the final answer is </p>\n          <p>\n            X = {datas.x % datas.m} + {datas.m}k\n          </p>\n        </div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          onClick={clearBtnOnClick}\n        >\n          Clear\n        </Button>\n      </div>\n    );\n  }\n  ReactDOM.render(result, document.getElementById(\"result\"));\n}\n\nexport function clearBtnOnClick() {\n  const result = (<div></div>);\n  ReactDOM.render(result, document.getElementById(\"result\"));\n}\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\nclass Header extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Chinese Remainder Theorem Calculator\n          </Typography>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    );\n  }\n};\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","export default __webpack_public_path__ + \"static/media/bg.f2b7a3d9.jpg\";","import \"./App.css\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { solveCRT } from \"./components/Computation\";\nimport { showResult } from \"./components/Result\";\nimport Header from \"./components/Header\";\nimport background from \"./bg.jpg\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"15ch\",\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nlet datas = null;\nfunction App() {\n  const classes = useStyles();\n  const [inputFields, setInputFields] = useState([\n    { remainder: 3, modulo: 5 },\n    { remainder: 5, modulo: 7 },\n    { remainder: 7, modulo: 11 },\n  ]);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    datas = solveCRT(inputFields);\n    showResult(datas, classes);\n  };\n\n  const handleChangeInput = (index, event) => {\n    event.preventDefault();\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { remainder: 0, modulo: 0 }]);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    if (values.length !== 1) {\n      values.splice(index, 1);\n      setInputFields(values);\n    }\n  };\n\n  return (\n    <div style={{ backgroundImage: `url(${background})`,\n    backgroundPosition:\"center\",\n    backgroundAttachment:\"fixed\"\n     }}>\n      <Header />\n      <Container className=\"container\">\n        <div className=\"instruction\">\n          <h3>Add equations you want to solve</h3>\n        </div>\n        <Grid\n          container\n          alignItems=\"stretch\"\n          direction=\"column\"\n          justify=\"space-around\"\n          spacing={3}\n        >\n          <Grid item xs={12} className=\"form-data\">\n            <form\n              className={classes.root}\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n            >\n              {inputFields.map((inputField, index) => (\n                <div key={index}>\n                  <TextField\n                    label=\"Remainder\"\n                    type=\"number\"\n                    name=\"remainder\"\n                    variant=\"outlined\"\n                    value={inputField.remainder}\n                    required\n                    onChange={(event) => handleChangeInput(index, event)}\n                  />\n                  <TextField\n                    label=\"Modulo\"\n                    type=\"number\"\n                    name=\"modulo\"\n                    variant=\"outlined\"\n                    value={inputField.modulo}\n                    required\n                    onChange={(event) => handleChangeInput(index, event)}\n                  />\n                  <IconButton onClick={() => handleRemoveFields(index)}>\n                    <RemoveIcon />\n                  </IconButton>\n                  <IconButton onClick={() => handleAddFields()}>\n                    <AddIcon />\n                  </IconButton>\n                </div>\n              ))}\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                endIcon={<SendIcon />}\n                onSubmit={handleSubmit}\n              >\n                Solve\n              </Button>\n            </form>\n          </Grid>\n          <Grid item xs={12} id=\"result\"></Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}